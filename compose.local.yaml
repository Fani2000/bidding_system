services:
  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  mongodb:
    image: mongo:8.0
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: mongopw
    ports:
      - "27017:27017"
    volumes:
      - mongodata:/data/db

  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
      - "5672:5672"
      - "15672:15672"

  auction-svc:
    image: auction-svc:latest
    build:
      context: .
      dockerfile: src/AuctionService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - ASPNETCORE_URLS=http://+:7777
      - RabbitMQ__Host=rabbitmq
      - ConnectionStrings__DefaultConnection=Server=postgres;User Id=postgres;Password=postgres;Database=auctions
      - IdentityServiceUrl=http://identity-svc
      - Kestrel__Endpoints__Grpc__Protocols=Http2
      - Kestrel__Endpoints__Grpc__Url=http://+:7777
      - Kestrel__Endpoints__WebApi__Protocols=Http1
      - Kestrel__Endpoints__WebApi__Url=http://+:80
    ports:
      - 7001:80
      - 7777:7777
    depends_on:
      - postgres
      - rabbitmq

  search-svc:
    image: search-svc:latest
    build:
      context: .
      dockerfile: src/SearchService/Dockerfile
    ports:
      - "7002:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__MongoDbConnection=mongodb://root:mongopw@mongodb:27017
      - RabbitMq__Host=rabbitmq
      - IdentityServiceUrl=http://identity-svc
      - AuctionServiceUrl=http://auction-svc
    depends_on:
      - postgres
      - rabbitmq
  
  identity-svc:
    image: identity-svc:latest
    build:
      context: .
      dockerfile: src/IdentityService/Dockerfile
    # ports:
    #   - "5001:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - IssuerUri=id.carsties.local
      - ClientApp=app.carsties.local
      - VIRTUAL_HOST=id.carsties.local
      - ConnectionStrings__DefaultConnection=server=postgres;port=5432;database=IdentityDb;user id=postgres;password=postgres;
    depends_on:
      - postgres

  gateway-svc:
    image: gateway-svc:latest
    build:
      context: .
      dockerfile: src/GatewayService/Dockerfile
    # ports:
    #   - "6001:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://+:80
      - ClientApp=app.carsties.local
      - VIRTUAL_HOST=api.carsties.local
    depends_on:
      - identity-svc
      - auction-svc
      - search-svc

  bid-svc:
    image: bid-svc:latest
    build:
      context: .
      dockerfile: src/BiddingService/Dockerfile
    ports:
      - "7003:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__BidDbConnection=mongodb://root:mongopw@mongodb:27017
      - RabbitMq__Host=rabbitmq
      - IdentityServiceUrl=http://identity-svc
      - AuctionServiceUrl=http://auction-svc
      - GrpcAuction=http://auction-svc:7777
    depends_on:
      - postgres
      - rabbitmq

  notify-svc:
    image: notify-svc:latest
    build:
      context: .
      dockerfile: src/NotificationService/Dockerfile
    ports:
      - "7004:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - RabbitMQ__Host=rabbitmq
    depends_on:
      - rabbitmq

  web-app:
    image: web-app:latest
    build:
      context: .
      dockerfile: Frontend/Dockerfile
    volumes:
      - /var/lib/web/data
    environment:
      - AUTH_SECRET="4lj/CDAoZoHwXgsr3CjBbc1Je/ggJgWG1t12Viv1smc="
      - AUTH_URL=http://app.carsties.local
      - AUTH_URL_INTERNAL=http://web-app:3000
      - API_URL=http://api.carsties.local/
      - ID_URL=http://id.carsties.local
      - ID_URL_INTERNAL=http://identity-svc
      - NEXT_PUBLIC_NOTIFY_URL=http://gateway-svc/notifications
      - VIRTUAL_HOST=app.carsties.local
      - VIRTUAL_PORT=3000


  nginx-proxy:
    image: nginxproxy/nginx-proxy
    container_name: nginx-proxy
    ports:
      - "80:80"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro

volumes:
  pgdata:
  mongodata:
